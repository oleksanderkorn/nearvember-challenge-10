import {
  PersistentMap,
  PersistentSet,
  PersistentVector,
  u128,
} from "near-sdk-as";
import { AccountId, Timestamp } from "../utils";

@nearBindgen
export class Game {
  private BOARD_SIZE: i16 = 16;

  public ownerFields: string[][];
  public counterpartyFields: string[][];

  constructor(
    public id: u16,
    public ownerId: AccountId,
    public counterpartyId: AccountId
  ) {
    this.ownerFields = this.generateBoard();
    this.counterpartyFields = this.generateBoard();
  }

  private generateBoard(): string[][] {
    let rows = [
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        "*",
      ],
      [
        ".",
        "*",
        ".",
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        "*",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        "*",
        "*",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
      [
        "*",
        ".",
        ".",
        ".",
        "*",
        ".",
        ".",
        ".",
        "*",
        "*",
        ".",
        ".",
        ".",
        "*",
        ".",
        ".",
      ],
      [
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
        ".",
      ],
    ];
    return rows;
  }
}
